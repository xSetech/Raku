# ---
# Configuration for Cargo inherited by all virtual workspaces
# ---

# The Nintendo 64 is not an officially supported platform by Rust. To target
# this platform, normally available out of the box modules and intrinsics for
# officially supported platforms (e.g. memset) must be compiled alongside the
# packages in this repo.
#
# Docs:
#   - https://doc.rust-lang.org/cargo/reference/unstable.html#build-std
#   - https://doc.rust-lang.org/cargo/reference/unstable.html#build-std-features
#   - https://github.com/rust-lang/compiler-builtins
#
[unstable]
build-std = [
    "core",
    "compiler_builtins",
]
build-std-features = [
    "compiler-builtins-mem",
]

# Linking "freestanding" binaries requires special incantations on most platforms,
# see: https://os.phil-opp.com/freestanding-rust-binary/#linker-errors
#
[target.'cfg(target_os = "linux")']
rustflags = [
    "-C", "link-arg=-nostartfiles",
]

[target.'cfg(target_os = "macos")']
rustflags = [
    "-C", "link-args=-e __start -static -nostartfiles",
]

# This project targets the platform's central processor and graphics coprocessor,
# which have different microarchitectures (despite both being MIPS processors).
# Target-specific rustc flags are defined below if they're needed. Example args
# useful for debugging code generate are left commented.
#
[target.mips-ultra64-cpu]
rustflags = [
    # "--verbose",
    # "--print", "link-args",
    # "--emit=llvm-ir,llvm-bc",
    # "-C", "save-temps",
]

[target.mips-ultra64-rcp]
rustflags = [
    # "--verbose",
    # "--print", "link-args",
    # "--emit=llvm-ir,llvm-bc",
    # "-C", "save-temps",
]

# eof
